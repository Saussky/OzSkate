// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}
model SkateShop {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  url      String    @unique
  state    String
  since_id String?
  products Product[]
}

model Product {
  id          String    @id @default(cuid())
  shopId      Int
  skateShop   SkateShop @relation(fields: [shopId], references: [id])
  title       String
  handle      String
  description String?
  vendor      String?
  productType String?
  tags        String?
  image      String?   // Store JSON string for image URLs
  variants    Variant[] // One-to-many relationship with Variant
  options     Option[]  // One-to-many relationship with Option
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  publishedAt DateTime

  @@index([shopId])
}

model Variant {
  id               String    @id @default(cuid())
  productId        String
  product          Product   @relation(fields: [productId], references: [id])
  title            String?
  option1          String?
  option2          String?
  option3          String?
  sku              String?   // SKU field
  price            Int    // Price in floating-point // Shopify loves strings
  compareAtPrice   String?    // Original price (if discounted)
  grams            Int       // Weight in grams
  position         Int
  requiresShipping Boolean?  // Whether shipping is required
  taxable          Boolean?  // Whether the item is taxable
  featuredImage    String?   // URL of the featured image
  available        Boolean   // Availability of the variant
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  @@index([productId])
}

model Option {
  id         String   @id @default(cuid())
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
  name       String
  position   Int
  values     String    // Store values as a comma-separated string

  @@index([productId])
}